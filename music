import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javazoom.jl.decoder.Bitstream;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.advanced.AdvancedPlayer;
import javazoom.jl.player.advanced.PlaybackEvent;
import javazoom.jl.player.advanced.PlaybackListener;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class MusicPlayer extends Application {

    private AdvancedPlayer player;

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Simple Music Player");

        Button playButton = new Button("Play");
        Button stopButton = new Button("Stop");

        playButton.setOnAction(e -> chooseAndPlayMusic());
        stopButton.setOnAction(e -> stopMusic());

        VBox vbox = new VBox(playButton, stopButton);
        Scene scene = new Scene(vbox, 300, 100);

        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void chooseAndPlayMusic() {
        FileChooser fileChooser = new FileChooser();
        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("MP3 files", "*.mp3"));
        File selectedFile = fileChooser.showOpenDialog(null);

        if (selectedFile != null) {
            playMusic(selectedFile);
        }
    }

    private void playMusic(File file) {
        try {
            FileInputStream fileInputStream = new FileInputStream(file);
            Bitstream bitstream = new Bitstream(fileInputStream);
            int duration = (int) bitstream.readFrame().max_number_of_frames((int) bitstream.readFrame().max_number_of_frames(0));

            fileInputStream.close();

            FileInputStream fileInputStream2 = new FileInputStream(file);
            player = new AdvancedPlayer(fileInputStream2);

            player.setPlayBackListener(new PlaybackListener() {
                @Override
                public void playbackFinished(PlaybackEvent evt) {
                    stopMusic();
                }
            });

            new Thread(() -> {
                try {
                    player.play(0, duration);
                } catch (JavaLayerException e) {
                    e.printStackTrace();
                }
            }).start();
        } catch (JavaLayerException | IOException e) {
            e.printStackTrace();
        }
    }

    private void stopMusic() {
        if (player != null) {
            player.close();
        }
    }
}
